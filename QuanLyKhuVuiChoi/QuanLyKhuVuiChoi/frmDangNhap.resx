<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>